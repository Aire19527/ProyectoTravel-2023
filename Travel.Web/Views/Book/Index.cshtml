@{
    ViewData["Title"] = "Libros";
}

<div class="row">
    <div class="col-md-6">
        <h1> Listado de Libros</h1>
    </div>

    <div class="col-md-6">
        <button class="buttonTitle btn btn-primary" onclick="newBook()">
            <i class="iconMargin fa-solid fa-circle-plus"></i>
            Nuevo Libro
        </button>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-12">

        <table id="tblBook" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">Titulo</th>
                    <th scope="col">Autor</th>
                    <th scope="col">Editorial</th>
                    <th scope="col"># Paginas</th>
                    <th scope="col">Opciones</th>
                </tr>
            </thead>
            <tbody id="bodyBook">
            </tbody>
        </table>
    </div>
</div>




@*modal*@
<div class="modal fade" id="modalBook" data-backdrop="static" data-keyboard="false" tabindex="1" role="dialog" aria-labelledby="modalPetLabel" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="idTituloModalBook">Crear Libro</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <div class="col-md-10 form-group">
                            <label for="recipient-name" class="col-form-label">Titulo</label>
                            <input type="text"
                                   class="form-control"
                                   id="txtTitulo"
                                   maxlength="200"
                                   placeholder="Titulo del libro" required>

                        </div>
                        <div class="col-md-2 form-group">
                            <label for="recipient-name" class="col-form-label"># Páginas</label>
                            <input type="number" class="form-control" id="txtNumberPages" placeholder="Numero Páginas" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 form-group">
                            <label for="recipient-name" class="col-form-label">Sinopsis</label>

                            <textarea name="textarea"
                                      rows="2"
                                      cols="50"
                                      class="form-control"
                                      id="txtSinopsis"
                                      maxlength="1000"
                                      placeholder="Sinopsis" required></textarea>


                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label for="recipient-name" class="col-form-label">Autor</label>
                            <select class="form-control" id="cmbAutor" onchange="selectaAutor()">
                                <option disabled>Seleccionar Autor</option>
                            </select>
                        </div>

                        <div class="col-md-6 form-group">
                            <label for="recipient-name" class="col-form-label">Editorial</label>
                            <select class="form-control" id="cmbEditorial" onchange="selectaEditorial()">
                                <option disabled>Seleccionar una Editorial</option>
                            </select>
                        </div>
                    </div>

                    <div class="row" id="sectionFile">
                        <div class="col-md-12 form-group">
                            <label for="recipient-name" class="col-form-label">Imagen</label>
                            <input type="file"
                                   class="form-control"
                                   accept="image/*"
                                   id="fileImage"
                                   style="padding: 3px !important;">
                        </div>
                    </div>

                    <div class="row" id="sectionImg">
                        <div class="col-md-12 form-group">
                            <img id="showImg"
                                 class="rounded mx-auto d-block"
                                 style="height: 300px;"
                                 alt="imagen del libro">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">
                    <i class="fas fa-window-close"></i>
                    Cancelar
                </button>
                <button type="button" id="btnSave" class="btn btn-success" onclick="saveBook()">
                    <i class="far fa-save"></i>
                    Guardar
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">

        let idBook = 0;
        var listBook = [];
        var listAutor = [];
        var listEditorial = [];
        let idAutor = 0;
        let idEditorial = 0;
        $(document).ready(function () {
            getAllBooks();

            getAllAutor();
            getAllEditorial();
        });

        ///Servicios Book
        function getAllBooks() {
            showProgress();
            $.ajax({
                url: '@Url.Action("GetAllBook", "Book")',
                method: 'GET',
                dataType: "json",
                success: function (data) {
                    hideProgress();
                    if (data.isSuccess) {
                        listBook = data.result;
                        console.log(listBook);
                        loadGrid(listBook);
                    } else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }

                },
                error: function (xhr, textStatus, errorThrown) {
                    hideProgress();
                    console.error(xhr, textStatus, errorThrown);
                }
            });
        }

        function loadGrid(data) {
            //llenar registro
            if ($.fn.dataTable.isDataTable('#tblBook')) {
                var table = $('#tblBook').DataTable();
                table.destroy();
                loadGridBook(data);
                loadGridDataTable('tblBook');
            }
            else {
                loadGridBook(data);
                loadGridDataTable('tblBook');
            }
        }

        function loadGridBook(data) {
            $('#bodyBook').html('');

            for (let i = 0; i < data.length; i++) {
                var tr = `
                                                        <tr>
                                                                    <th>`+ data[i].title + `</th>
                                                                    <th>`+ data[i].autor + `</th>
                                                                    <th>`+ data[i].editorial + `</th>
                                                                    <th>`+ data[i].n_Pages + `</th>
                                                            <td>
                                                                <button  class="btn btn-warning" onclick="editBook(`+ data[i].id + `)"><i class="fas fa-edit"></i> Editar</button>
                                                                <button class="btn btn-danger" onclick="deleteBookConfirm(`+ data[i].id + `)"><i class="fas fa-trash-alt"></i> Eliminar</button>
                                                                        <button class="btn btn-info" onclick="detail(`+ data[i].id + `)"><i class="fas fa-trash-alt"></i> Detalle</button>
                                                            </td>
                                                        </tr>
                                              `;
                $('#bodyBook').append(tr);
            }

        }

        function saveBook() {
            if (validarForm()) {

                var formData = new FormData();
                formData.append("title", $("#txtTitulo").val());
                formData.append("n_Pages", $("#txtNumberPages").val());
                formData.append("sinopsis", $("#txtSinopsis").val());
                formData.append("idEditorial", idEditorial);
                formData.append("idAutor", idAutor);

                var myfile = document.getElementById("fileImage");
                if (myfile.files.length > 0) {
                    var files = $("#fileImage")[0].files;
                    formData.append("FileImage", files[0]);
                }


                //let parametro = {
                //    title: $("#txtTitulo").val(),
                //    n_Pages: $("#txtNumberPages").val(),
                //    sinopsis: $("#txtSinopsis").val(),
                //    idEditorial: idEditorial,
                //    idAutor: idAutor
                //};
                console.log(formData);

                if (idBook == 0) {
                    insertBook(formData);
                } else {
                    formData.append("id", idBook);
                    updateAutor(formData);
                }
            }
        }

        function cleanForm() {
            $("#txtTitulo").val('');
            $("#txtNumberPages").val('');
            $("#txtSinopsis").val('');
            $("#fileImage").val('');
            idAutor = 0;
            idEditorial = 0;

            loadCmbAutor(listAutor);
            loadCmbEditorial(listEditorial);
        }

        function validarForm() {
            if ($("#txtTitulo").val() == '') {
                $("#txtTitulo").focus();
                toastMessage('warning', 'El titúlo es obligatorio.');
                return false;
            }

            if ($("#txtNumberPages").val() == '') {
                $("#txtNumberPages").focus();
                toastMessage('warning', 'El Número de Páginas es obligatorio.');
                return false;
            }

            if ($("#txtSinopsis").val() == '') {
                $("#txtSinopsis").focus();
                toastMessage('warning', 'La Sinopsis es obligatorio.');
                return false;
            }

            if (idAutor == 0) {
                $("#cmbAutor").focus();
                toastMessage('warning', 'Por favor seleccione un Autor.');
                return false;
            }

            if (idEditorial == 0) {
                $("#cmbEditorial").focus();
                toastMessage('warning', 'Por favor seleccione una Editorial.');
                return false;
            }

            return true;
        }

        //funciones call crud
        function newBook() {
            cleanForm();
            $('#sectionImg').attr('hidden', true);
            $('#sectionFile').attr('hidden', false);
            viewDatail(false);
            $('#idTituloModalBook').html("Crear Libro");
            $('#modalBook').modal({ keyboard: true });

          

        }

        function deleteBookConfirm(idBook) {
            Swal.fire({
                title: '¿Confirmar Eliminación?',
                text: "No podrás revertir esto!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Si, Eliminar!',
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteBook(idBook);
                }
            });
        }

        function editBook(id) {

            idBook = id;
            let book = listBook.find(x => x.id == idBook);
            console.log(book);

            $("#txtTitulo").val(book.title);
            $("#txtNumberPages").val(book.n_Pages);
            $("#txtSinopsis").val(book.sinopsis);

            idAutor = book.idAutor;
            idEditorial = book.idEditorial;

            loadCmbAutor(listAutor, idAutor);
            loadCmbEditorial(listEditorial, idEditorial);

            $("#showImg").attr('src', book.urlImagen);
            $('#sectionImg').attr('hidden', false);
            $('#sectionFile').attr('hidden', false);

            viewDatail(false);
            $('#idTituloModalBook').html("Editar Libro");
            $('#modalBook').modal({ keyboard: true });
        }

        //CRUD
        function insertBook(book) {
            showProgress();
            $.ajax({
                url: '@Url.Action("InsertBook", "Book")',
                method: 'POST',
                data: book,
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (data) {
                    hideProgress();
                    console.log(data);

                    if (data.isSuccess) {
                        $('#modalBook').modal('hide');
                        cleanForm();
                        getAllBooks();
                        toastMessage('success', data.message);
                    }
                    else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    hideProgress();
                    //toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                    console.error(xhr, textStatus, errorThrown);
                    if (xhr.status == 400) {
                        Swal.fire(
                            'Alerta!',
                            xhr.responseJSON.message,
                            'warning');
                    } else {
                        Swal.fire(
                            'Opps!',
                            xhr.responseJSON.message,
                            'error');
                    }
                }
            });
        }

        function updateAutor(book) {
            showProgress();
            $.ajax({
                url: '@Url.Action("UpdateBook", "Book")',
                method: 'PUT',
                data: book,
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (data) {
                    hideProgress();
                    console.log(data);

                    if (data.isSuccess) {
                        $('#modalBook').modal('hide');


                        getAllBooks();
                        toastMessage('success', data.message);

                        cleanForm();
                    }
                    else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    hideProgress();
                    //toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                    console.error(xhr, textStatus, errorThrown);
                    if (xhr.status == 400) {
                        Swal.fire(
                            'Alerta!',
                            xhr.responseJSON.message,
                            'warning');
                    } else {
                        Swal.fire(
                            'Opps!',
                            xhr.responseJSON.message,
                            'error');
                    }
                }
            });
        }

        function deleteBook(idBook) {
            showProgress('Eliminando Libro');
            $.ajax({
                url: '@Url.Action("DeleteBook", "Book")',
                method: 'DELETE',
                data: {
                    idBook: idBook
                },
                dataType: "json",
                success: function (data) {
                    hideProgress();
                    console.log(data);
                    if (data.isSuccess) {

                        listBook = listBook.filter(x => x.id != idBook);
                        loadGrid(listBook);

                        Swal.fire(
                            'Eliminado!',
                            data.message,
                            'success');
                    } else {
                        Swal.fire(
                            'Error!',
                            data.message,
                            'error');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    hideProgress();
                    console.error(xhr, textStatus, errorThrown);
                }
            });
        }

        ///Servicios Autor
        function getAllAutor() {
            showProgress();
            $.ajax({
                url: '@Url.Action("GetAllAutores", "Autor")',
                method: 'GET',
                dataType: "json",
                success: function (data) {
                    hideProgress();
                    if (data.isSuccess) {
                        listAutor = data.result;
                        console.log(listAutor);
                        loadCmbAutor(listAutor);


                    } else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }

                },
                error: function (xhr, textStatus, errorThrown) {
                    hideProgress();
                    console.error(xhr, textStatus, errorThrown);
                }
            });
        }

        function loadCmbAutor(data, selected) {
            $('#cmbAutor').empty();
            $("#cmbAutor").append('<option value="" disabled selected>Seleccione un Autor</option>');
            $.each(data, function (i, lista) {
                if (data[i].id == selected) {
                    $("#cmbAutor").append('<option style="cursor:pointer;" " value="' + data[i].id + '"selected>' + data[i].fullName + '</option>');
                } else {
                    $("#cmbAutor").append('<option style="cursor:pointer;" " value="' + data[i].id + '">' + data[i].fullName + '</option>');
                }
            });
        }

        function selectaAutor() {
            var combo = document.getElementById("cmbAutor");
            let selected = combo.options[combo.selectedIndex].value;
            console.log(selected);
            //let text = combo.options[combo.selectedIndex].text;
            idAutor = selected;
        }

        ///Servicios Editorial
        function getAllEditorial() {
            showProgress();
            $.ajax({
                url: '@Url.Action("GetAllEditorial", "Editorial")',
                method: 'GET',
                dataType: "json",
                success: function (data) {
                    hideProgress();
                    if (data.isSuccess) {
                        listEditorial = data.result;
                        console.log(listEditorial);
                        loadCmbEditorial(listEditorial);
                    } else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }

                },
                error: function (xhr, textStatus, errorThrown) {
                    hideProgress();
                    console.error(xhr, textStatus, errorThrown);
                }
            });
        }

        function loadCmbEditorial(data, selected) {
            $('#cmbEditorial').empty();
            $("#cmbEditorial").append('<option value="" disabled selected>Seleccione una Editorial</option>');
            $.each(data, function (i, lista) {
                if (data[i].id == selected) {
                    $("#cmbEditorial").append('<option style="cursor:pointer;" " value="' + data[i].id + '"selected>' + data[i].name + '</option>');
                } else {
                    $("#cmbEditorial").append('<option style="cursor:pointer;" " value="' + data[i].id + '">' + data[i].name + '</option>');
                }
            });
        }

        function selectaEditorial() {
            var combo = document.getElementById("cmbEditorial");
            let selected = combo.options[combo.selectedIndex].value;
            console.log(selected);
            //let text = combo.options[combo.selectedIndex].text;
            idEditorial = selected;
        }

        function detail(id) {
            idBook = id;
            let book = listBook.find(x => x.id == idBook);
            console.log(book);

            $("#txtTitulo").val(book.title);
            $("#txtNumberPages").val(book.n_Pages);
            $("#txtSinopsis").val(book.sinopsis);

            idAutor = book.idAutor;
            idEditorial = book.idEditorial;

            loadCmbAutor(listAutor, idAutor);
            loadCmbEditorial(listEditorial, idEditorial);
            $("#showImg").attr('src', book.urlImagen);
            $('#sectionImg').attr('hidden', false);
            $('#sectionFile').attr('hidden', true);

            $('#idTituloModalBook').html("Detalle Libro");
            $('#modalBook').modal({ keyboard: true });
            viewDatail(true);
        }

        function viewDatail(habilitar) {
            $("#txtTitulo").attr('disabled', habilitar);
            $("#txtNumberPages").attr('disabled', habilitar);
            $("#txtSinopsis").attr('disabled', habilitar);
            $("#cmbEditorial").attr('disabled', habilitar);
            $("#cmbAutor").attr('disabled', habilitar);
            $('#btnSave').attr('hidden', habilitar);
        }
    </script>
}